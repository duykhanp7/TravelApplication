// This file is "main.dart"
import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:flutter/foundation.dart';
import 'package:travel_booking_tour/common/converter/converter__utils.dart';
import 'package:travel_booking_tour/data/model/user.dart';

import 'comment_json.dart';

// required: associates our `main.dart` with the code generated by Freezed
part 'news_json.freezed.dart';
// optional: Since our Person class is serializable, we must add this line.
// But if Person was not serializable, we could skip it.
part 'news_json.g.dart';

@freezed
class NewsJson with _$NewsJson {
  const factory NewsJson({
    int? id,
    AttributesJson? attributes,
  }) = _NewsJson;

  factory NewsJson.fromJson(Map<String, Object?> json) =>
      _$NewsJsonFromJson(json);
}

@freezed
class AttributesJson with _$AttributesJson {
  const factory AttributesJson(
      {String? title,
      @ConvertStringToDateTime() DateTime? createdAt,
      @ConvertStringToDateTime() DateTime? updatedAt,
      @ConvertStringToDateTime() DateTime? publishedAt,
      String? description,
      @JsonKey(name: 'Image') ImageJson? images,
      LikeDataJson? likes,
      AuthorJson? author,
      CommentResponeJson? comments}) = _AttributesJson;

  factory AttributesJson.fromJson(Map<String, Object?> json) =>
      _$AttributesJsonFromJson(json);
}

@freezed
class ImageJson with _$ImageJson {
  const factory ImageJson({
    List<ImageChildJson>? data,
  }) = _ImageJson;

  factory ImageJson.fromJson(Map<String, Object?> json) =>
      _$ImageJsonFromJson(json);
}

@freezed
class ImageChildJson with _$ImageChildJson {
  const factory ImageChildJson({
    int? id,
    ImageChildAttributesJson? attributes,
  }) = _ImageChildJson;

  factory ImageChildJson.fromJson(Map<String, Object?> json) =>
      _$ImageChildJsonFromJson(json);
}

@freezed
class ImageChildAttributesJson with _$ImageChildAttributesJson {
  const factory ImageChildAttributesJson({String? name, String? url}) =
      _ImageChildAttributesJson;

  factory ImageChildAttributesJson.fromJson(Map<String, Object?> json) =>
      _$ImageChildAttributesJsonFromJson(json);
}

@freezed
class LikeDataJson with _$LikeDataJson {
  const factory LikeDataJson({
    List<LikeDataJsonData>? data,
  }) = _LikeDataJson;

  factory LikeDataJson.fromJson(Map<String, Object?> json) =>
      _$LikeDataJsonFromJson(json);
}

@freezed
class LikeDataJsonData with _$LikeDataJsonData {
  const factory LikeDataJsonData({
    int? id,
  }) = _LikeDataJsonData;

  factory LikeDataJsonData.fromJson(Map<String, Object?> json) =>
      _$LikeDataJsonDataFromJson(json);
}

@freezed
class AuthorJson with _$AuthorJson {
  const factory AuthorJson({AuthorJsonData? data}) = _AuthorJson;

  factory AuthorJson.fromJson(Map<String, Object?> json) =>
      _$AuthorJsonFromJson(json);
}

@freezed
class AuthorJsonData with _$AuthorJsonData {
  const factory AuthorJsonData({int? id, UserJson? attributes}) =
      _AuthorJsonData;

  factory AuthorJsonData.fromJson(Map<String, Object?> json) =>
      _$AuthorJsonDataFromJson(json);
}

@freezed
class CommentResponeJson with _$CommentResponeJson {
  const factory CommentResponeJson({List<CommentJson>? data}) =
      _CommentResponeJson;

  factory CommentResponeJson.fromJson(Map<String, Object?> json) =>
      _$CommentResponeJsonFromJson(json);
}
